name: Build and test a Python package using Maturin
on:
  workflow_call:
    inputs:
      artifact:
        description: 'Name of the distribution artifact.'
        type: string
        required: false
        default: dist
jobs:
  build-source:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Install Maturin
        run: python -m pip install maturin
      - name: Build source tarball
        run: python -m maturin sdist
      - name: Upload source tarball
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.artifact }}
          path: target/wheels
  build-and-test-binary-qemu:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - {image: 'quay.io/pypa/manylinux_2_28_x86_64'}
          - {image: 'quay.io/pypa/manylinux_2_28_aarch64'}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Build and test wheel
        run: |
          docker run --rm -i --mount=type=bind,src="$PWD",dst=/repo ${{ matrix.image }} sh -se <<EOF
              curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
              . "\$HOME/.cargo/env"
              cd /repo
              python3.11 -m pip install maturin
              python3.11 -m maturin build
              wheel=\`echo target/wheels/*.whl\`
              python3.11 -m pip install "\$wheel"
              python3.11 -m unittest -bv
          EOF
      - name: Upload wheel
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.artifact }}
          path: target/wheels
