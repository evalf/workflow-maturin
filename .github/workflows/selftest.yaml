name: selftest
on:
  pull_request:
  push:
    branches:
      - release/*
jobs:
  build-and-test:
    name: Build and test
    uses: ./.github/workflows/build-and-test.yaml
    with:
      targets: |
        defaults = dict(python='cp38', test=True)
        targets = []
        targets.extend(defaults | dict(os='linux', arch=arch) for arch in ('x86_64', 'aarch64'))
        targets.extend(defaults | dict(os='linux', arch=arch, test=False) for arch in ('armv7',))
        targets.extend(defaults | dict(os='macos', arch=arch) for arch in ('x86_64', 'universal2'))
        targets.extend(defaults | dict(os='windows', arch=arch) for arch in ('x86_64', 'i686'))
  check:
    name: Test distribution
    needs: build-and-test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist
      - name: Install example
        run: python -m pip install --no-index --find-links dist example
      - name: Test example
        shell: python
        run: |
          import example
          assert example.double(2) == 4
